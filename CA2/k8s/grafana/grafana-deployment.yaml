apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: conveyor-pipeline
  labels:
    app: grafana
    component: visualization
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      serviceAccountName: conveyor-pipeline-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 472
        fsGroup: 472
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secrets
              key: admin-password
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "false"
        - name: GF_PATHS_PROVISIONING
          value: "/etc/grafana/provisioning"
        volumeMounts:
        - name: datasource-config
          mountPath: /etc/grafana/provisioning/datasources
        - name: dashboard-provider-config
          mountPath: /etc/grafana/provisioning/dashboards
        - name: dashboard-config
          mountPath: /var/lib/grafana/dashboards
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 20
      volumes:
      - name: datasource-config
        configMap:
          name: grafana-datasource-config
      - name: dashboard-provider-config
        configMap:
          name: grafana-dashboard-provider-config
      - name: dashboard-config
        configMap:
          name: grafana-dashboard-config
